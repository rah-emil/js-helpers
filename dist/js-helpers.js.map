{"version":3,"file":"/dist/js-helpers.js","mappings":"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","sources":["webpack://jsHelpers/webpack/bootstrap","webpack://jsHelpers/webpack/runtime/make namespace object","webpack://jsHelpers/./src/modules/math.js","webpack://jsHelpers/./src/js-helpers.js","webpack://jsHelpers/./src/modules/visual.js","webpack://jsHelpers/./src/modules/arr.js","webpack://jsHelpers/./src/modules/obj.js","webpack://jsHelpers/./src/modules/regexp.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * @module Math\r\n * @description Mathematical operations on numbers\r\n */\r\n\r\n\r\n/**\r\n * Degrees to radians\r\n * @param deg\r\n * @returns {number}\r\n */\r\nexport const DEG_TO_RAD = deg => deg / 180 * Math.PI\r\n\r\n\r\n/**\r\n * calculating haversine\r\n */\r\nexport const HAV = a => Math.sin(a / 2) ** 2\r\n\r\n\r\n/**\r\n * calculating arcs of haversine\r\n */\r\nexport const AHAV = a => 2 * Math.asin(Math.sqrt(a))\r\n\r\n\r\n/**\r\n * calculating the center radius\r\n */\r\nexport const CENTRAL_ANGLE = (loc1, loc2) => {\r\n\tconst dlong = DEG_TO_RAD(loc1[1] - loc2[1])\r\n\tconst lat1 = DEG_TO_RAD(loc1[0])\r\n\tconst lat2 = DEG_TO_RAD(loc2[0])\r\n\r\n\treturn AHAV(\r\n\t\tHAV(lat2 - lat1) +\r\n\t\tMath.cos(lat1) * Math.cos(lat2) * HAV(dlong)\r\n\t)\r\n}\r\n\r\n\r\n/**\r\n * Percentage difference between numbers X and Y.\r\n * For example, income for the current and last month.\r\n * @param y\r\n * @returns {number}\r\n */\r\nexport const percentageDifference = function(y){\r\n\tlet x = this\r\n\r\n\tif(y === 0) return ((y - x) / x) * 100\r\n\telse return ((x - y) / y) * 100\r\n}\r\n\r\n\r\n/**\r\n * Subtraction from the number of percentages.\r\n * For example, displaying a discounted price.\r\n * @param percentage\r\n * @returns {number}\r\n */\r\nexport const minusPercentage = function(percentage){\r\n\tlet price = this\r\n\treturn price - (price * (percentage/100))\r\n}\r\n\r\n\r\n/**\r\n * Random number from MIN to MAX (integer)\r\n * @param min - Minimum number\r\n * @param max - Maximum number\r\n * @returns {number}\r\n */\r\nexport const randomInteger = function(min, max){\r\n\tlet rand = min - 0.5 + Math.random() * (max - min + 1)\r\n\treturn Math.round(rand)\r\n}\r\n\r\n\r\n/**\r\n * Checking a number for an integer\r\n * @returns {boolean}\r\n */\r\nexport const isInteger = function() {\r\n\treturn this % 1 === 0\r\n}\r\n\r\n\r\n/**\r\n * Finding the nearest position in latitude and longitude (more details https://en.wikipedia.org/wiki/Great-circle_distance#Computational_formulas)\r\n * @param locations - points on the map (inside there should be coords in the format: [lat, lot])\r\n * @param coords - required coordinates ([lat, lot])\r\n * @returns {{distance: number, index: null, coords: null}}\r\n */\r\nexport const nearestDistance = (locations, coords) => {\r\n\tlet min_dist = Number.POSITIVE_INFINITY;\r\n\tlet nearest = undefined;\r\n\r\n\tfor (const loc of locations) {\r\n\t\tconst dist = CENTRAL_ANGLE([loc.coords[0], loc.coords[1]], coords);\r\n\t\tif (dist < min_dist) {\r\n\t\t\tmin_dist = dist;\r\n\t\t\tnearest = loc;\r\n\t\t}\r\n\t}\r\n\r\n\treturn nearest;\r\n}\r\n","import {\r\n    percentageDifference,\r\n    minusPercentage,\r\n    randomInteger,\r\n    isInteger,\r\n    nearestDistance,\r\n} from './modules/math'\r\n\r\nimport {\r\n    simplifyNumber,\r\n    makeDigit,\r\n    toCurrency,\r\n} from './modules/visual'\r\n\r\nimport {\r\n    sum,\r\n    average,\r\n    isEmpty,\r\n} from './modules/obj'\r\n\r\nimport {\r\n    deleteItem,\r\n    deleteItems,\r\n} from './modules/arr'\r\n\r\nimport {\r\n    isEmail,\r\n    isOnlyNumbers,\r\n    isOnlyLetters,\r\n    isOnlyLatin,\r\n    isOnlyCyrillic,\r\n    isDomain,\r\n    isIP,\r\n    hasSymbols,\r\n} from './modules/regexp'\r\n\r\n\r\n/**\r\n * @module Math\r\n */\r\nNumber.prototype.percentageDifference = percentageDifference\r\nNumber.prototype.minusPercentage = minusPercentage\r\nMath.randomInteger = randomInteger\r\nNumber.prototype.isInteger = isInteger\r\nMath.nearestDistance = nearestDistance\r\n\r\n\r\n/**\r\n * @module Visual\r\n */\r\nNumber.prototype.simplifyNumber = simplifyNumber\r\nNumber.prototype.makeDigit = makeDigit\r\nNumber.prototype.toCurrency = toCurrency\r\n\r\n\r\n/**\r\n * @module Arr\r\n */\r\nArray.prototype.deleteItem = deleteItem\r\nArray.prototype.deleteItems = deleteItems\r\n\r\n\r\n/**\r\n * @module Obj\r\n */\r\nwindow.isEmpty = isEmpty\r\nArray.prototype.sum = sum\r\nArray.prototype.average = average\r\n\r\n\r\n/**\r\n * @module RegExp\r\n */\r\nString.prototype.isEmail = isEmail\r\nString.prototype.isOnlyNumbers = isOnlyNumbers\r\nString.prototype.isOnlyLetters = isOnlyLetters\r\nString.prototype.isOnlyLatin = isOnlyLatin\r\nString.prototype.isOnlyCyrillic = isOnlyCyrillic\r\nString.prototype.isDomain = isDomain\r\nString.prototype.isIP = isIP\r\nString.prototype.hasSymbols = hasSymbols\r\n","/**\r\n * @module Visual\r\n * @description Converting numbers and strings to a specific form\r\n */\r\n\r\n\r\n/**\r\n * Simplify large numbers for readability.\r\n * For example, to view articles.\r\n * @param fractionDigits - A number of symbols after comma.\r\n * @returns {string} - simplified number.\r\n */\r\nexport const simplifyNumber = function(fractionDigits = 0){\r\n    if (this >= 1000000000) return `${(this / 1000000000).toFixed(fractionDigits)}B`\r\n    else if (this >= 1000000) return `${(this / 1000000).toFixed(fractionDigits)}M`\r\n    else if (this >= 1000) return `${(this / 1000).toFixed(fractionDigits)}K`\r\n    else return `${this.toFixed(fractionDigits)}`\r\n}\r\n\r\n\r\n/**\r\n * Dividing a number into digits.\r\n * @returns {string}\r\n */\r\nexport const makeDigit = function(){\r\n    return this.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, String.fromCharCode(160))\r\n}\r\n\r\n\r\n/**\r\n * Format the number in currency format.\r\n * @param currency - desired currency symbol\r\n * @param position - location of the currency symbol\r\n * @param fractionDigits - number of characters after decimal point\r\n * @param withZero - trim trailing zeros or not\r\n * @param separator - decimal separator (default is dot)\r\n * @returns {string} - monetary number\r\n */\r\nexport const toCurrency = function(currency = \"$\", position = 'after', fractionDigits = 2, withZero = false, separator = '.'){\r\n    let price = this.toFixed(fractionDigits).toString()\r\n\r\n    // Add &nbsp; symbol\r\n    price = price.replace(/\\B(?=(\\d{3})+(?!\\d))/g, String.fromCharCode(160))\r\n\r\n    // Remove latest zeros\r\n    if(!withZero)\r\n        price = price.replace(/\\.0*$/, '')\r\n\r\n    // Separator replacement\r\n    if(separator !== '.')\r\n        price = price.replace('.', separator)\r\n\r\n    if(position === 'before')\r\n        return currency + price\r\n\r\n    // Default position\r\n    return price + currency\r\n}","/**\r\n * @module Arr\r\n * @description Operations on arrays\r\n */\r\n\r\n\r\n/**\r\n * Delete item from array\r\n * @param item - item for deletion from array\r\n * @returns {array}\r\n */\r\nexport const deleteItem = function(item){\r\n    if(this.indexOf(item) !== -1) return this.splice(this.indexOf(item), 1)\r\n    else console.warn(`jsHelpers: \"${item}\" not found in`, this)\r\n}\r\n\r\n\r\n/**\r\n * Delete items from array\r\n * @param items - items for deletion from array\r\n */\r\nexport const deleteItems = function(items){\r\n    items.forEach(item => this.deleteItem(item))\r\n}","/**\r\n * @module Obj\r\n * @description Operations on objects\r\n */\r\n\r\n\r\n/**\r\n * We return the sum of the values of the array of objects\r\n * @param key\r\n * @returns {number} - sum\r\n */\r\nexport const sum = function(key){\r\n    let sum = 0;\r\n\r\n    Array.from(this).forEach(item => {\r\n        sum += parseFloat(item[key])\r\n    })\r\n\r\n    return sum\r\n}\r\n\r\n\r\n/**\r\n * Returning the average of the fields\r\n * @param key\r\n * @param fractionDigits\r\n * @returns {string}\r\n */\r\nexport const average = function(key, fractionDigits = 2){\r\n    let sum = this.sum(key)\r\n    return (sum / this.length || 1).toFixed(fractionDigits).replace(/\\.0*$/, '')\r\n}\r\n\r\n\r\n/**\r\n * Check object for emptiness\r\n * @returns {boolean}\r\n */\r\nexport const isEmpty = function(obj){\r\n    return Object.keys(obj).length === 0\r\n}","/**\r\n * @module RegExp\r\n * @description\r\n */\r\n\r\n\r\n/**\r\n * Checking mail for correctness\r\n * @returns {boolean}\r\n */\r\nexport const isEmail = function(){\r\n    return /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/.test(this)\r\n}\r\n\r\n\r\n/**\r\n * Numbers only\r\n * @returns {boolean}\r\n */\r\nexport const isOnlyNumbers = function(){\r\n    return /^\\d+$/.test(this)\r\n}\r\n\r\n\r\n/**\r\n * Letters only\r\n * @returns {boolean}\r\n */\r\nexport const isOnlyLetters = function(){\r\n    return /^([a-zа-яё]+|\\d+)$/i.test(this)\r\n}\r\n\r\n\r\n/**\r\n * Only latin\r\n * @returns {boolean}\r\n */\r\nexport const isOnlyLatin = function(){\r\n    return /^[?!,.a-zA-Z0-9\\s]+$/i.test(this)\r\n}\r\n\r\n\r\n/**\r\n * Only cyrillic\r\n * @returns {boolean}\r\n */\r\nexport const isOnlyCyrillic = function(){\r\n    return /^[?!,.а-яА-ЯёЁ0-9\\s]+$/i.test(this)\r\n}\r\n\r\n\r\n/**\r\n * Check domain valid\r\n * @returns {boolean}\r\n */\r\nexport const isDomain = function(){\r\n    return /^((?:(?:(?:\\w[\\.\\-\\+]?)*)\\w)+)((?:(?:(?:\\w[\\.\\-\\+]?){0,62})\\w)+)\\.(\\w{2,6})$/.test(this)\r\n}\r\n\r\n\r\n/**\r\n * Check IP valid\r\n * @returns {boolean}\r\n */\r\nexport const isIP = function(){\r\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\:([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?$/.test(this)\r\n}\r\n\r\n\r\n/**\r\n * Check symbols\r\n * @returns {boolean}\r\n */\r\nexport const hasSymbols = function(){\r\n    return /^(?=.*[!@#$%^&(),.+=/\\/\\]\\[{}?><\":;|])/.test(this)\r\n}"],"names":["__webpack_require__","exports","Symbol","toStringTag","Object","defineProperty","value","DEG_TO_RAD","deg","Math","PI","HAV","a","sin","CENTRAL_ANGLE","loc1","loc2","dlong","lat1","lat2","cos","asin","sqrt","Number","prototype","percentageDifference","y","x","this","minusPercentage","percentage","randomInteger","min","max","rand","random","round","isInteger","nearestDistance","locations","coords","min_dist","POSITIVE_INFINITY","nearest","undefined","loc","dist","simplifyNumber","fractionDigits","toFixed","makeDigit","toString","replace","String","fromCharCode","toCurrency","currency","position","withZero","separator","price","Array","deleteItem","item","indexOf","splice","console","warn","deleteItems","items","forEach","window","isEmpty","obj","keys","length","sum","key","from","parseFloat","average","isEmail","test","isOnlyNumbers","isOnlyLetters","isOnlyLatin","isOnlyCyrillic","isDomain","isIP","hasSymbols"],"sourceRoot":""}